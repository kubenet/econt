import random
from flask import Flask, render_template, request
from flask_wtf import FlaskForm
from wtforms import StringField

app = Flask(__name__)
app.secret_key = 'my-super-secret-phrase-I-dont-tell-this-to-nobody'
dict_score = {'Контейнер №1': 12, 'Контейнер №2': 26, 'Контейнер №3': 510,
              'Контейнер №4': 14, 'Контейнер №5': 34, 'Контейнер №6': 140}
lst_code = ['1342', '9584', '7622', '9032', '9331', '5335', '1984', '0471']

list_facts = [
    'Пластик можно получить даже из молока. Полученный продукт не будет иметь запаха, будет растворим в воде, обладать противоаллергическими и антистатическими свойствами, не будет гореть.',
    'Существует разновидность грибов в Амазонке, которые питаются пластиком. Эти грибы могут жить в местах без доступа кислорода.',
    'Пластмассовый бочонок, одеваемый на провода компьютерной техники называется феррит, и используется для защиты от радиопомех и сигналов других электронных устройств.',
    'В метро Пекина, позволяют путешественникам платить за проезд пластиковыми бутылками.',
    'В 60-х годах, компания General Electric разработала систему, которая позволяло быстро эвакуировать астронавта с орбиты '
    'на поверхность Земли. Система состояла из пластиковой сумки, которая заполнялась пенополиуретаном, небольшой '
    'тормозной ракеты и парашютом. Все устройство помещалось в чемодан.',
    'Если «одеть» пластиковый пакет, на листья с ветками на дереве, через время можно получить достаточное количество воды для питья.',
    'Руанда первая страна в мире, где запрещены полиэтиленовые пакеты.,'
    'Каждый год более 6 000 американцев получают травму, связанную с попытками открыть пластиковую упаковку.,'
    'Существует компания, которая утверждает, что обладает уникальной технологией по переработке пластиковых отходов в нефть',
    'В 1941 году Генри Форд сделал автомобиль из пластика, полученного из конопли и сои. Автомобиль ездил на этаноле.',
    'Из-за большого количества пластика в океане, некоторые его районы уже превратились в безжизненные места.',
    'По оценкам Национального Агентства по охране окружающей среды США, для утилизации одной тонны пластика потребуется примерно 400 литров сырой нефти.',
    'Белые бумажные стаканчики Starbucks нельзя перерабатывать обычным способом, из-за пластиковых вкладышей в структуре бумажного стаканчика.',
    'В 1950 году, Нат Шерман, хотел получить патент на сигару с пластиковым наконечником, но в предоставление патента отказали, что не помешало его компании в течение 32 лет помещать на упаковку таких своих сигар надпись «патент».',
    'Ученые разработали полимер T 1000, первый в мире со способностью поменять свою форму.',
    'Если выложить из конструктора Лего, башню, то нижние детали, выдержат нагрузку, при высоте башни 3,5 км.',
    'Фталаты, токсины которые содержатся в пластмассе, которая в свою очередь применяется для производства столовых предметов, могут уменьшить размер полового органа у не родившегося ребенка. Если случайно попадет в организм женщины во время беременности.',
    '«Запах нового автомобиля», в основном, вызван добавками, так называемыми пластификаторами, при производстве пластмасс.',
    'Целлофан не пластик, он на самом деле состоит из целлюлозы, и разлагается в течение примерно 90 дней в почве.',
    'Первые пластиковые детские свистки в коробках с кукурузными хлопьями, были одними из первых инструментов, для телефонных взломов.']


class VerificationForm(FlaskForm):
    name = StringField()
    code = StringField()


@app.route('/', methods=['GET', 'POST'])
def index():
    form = VerificationForm()

    if request.method == 'POST':
        # получаем данные
        name = form.name.data
        code = form.code.data
        key_container = random.choice(list(dict_score.keys()))
        if code in lst_code:  # если такой код существует
            score = dict_score.setdefault(key_container, 0)  # если такого пользователя не существует, тогда создаем его
            dict_score[key_container] = score + random.randint(1, 8)  # добавляем баллы команде
            # выводим данные
            print("Получены данные {} и {}".format(name, code))
            return render_template('index.html', dict_score=dict_score, fact=list_facts[random.randint(0, 16)], form=form)
        else:
            return '<H1> Error! </H1>'
    return render_template('index.html', dict_score=dict_score, fact=list_facts[random.randint(0, 16)], form=form)



